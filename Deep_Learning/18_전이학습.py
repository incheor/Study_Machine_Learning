# -*- coding: utf-8 -*-
"""18.전이학습.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zwHOwkIXYxKXSQeqkVPuFRjwl-38Z83H

# 개요

- 좋은 성능을 내는 네트워크(인공 신경망)을 활용하여, 초기 프로젝트상 일정 성능을 확보하고, 그 기능에 특정 방식을 가미하여 좀더 나은 네트워크를 구성하는 방법(학습법)
- 좋은 모델은 수십~백개의 레이어를 가지고 있고, 훈련량도 엄청나게 실행되었다.
- 장점
  - 시간 단축(학습, 특정수준의 정확도)
  - 기회 비용 창출

# 전이학습

- 지식 재사용
- 처음부터 학습하지 않고, 새로운 과제를 해결
- Transfer Learning
  - 이미 학습된 모델에서 가중치와 편향값 그대로 사용

# 용어

- Pre_Training
  - 사전학습, 사전훈련
  - Weight, bias을 잘 활용하여 진행하는 전략

- Fine Tuning
  - 미세조정
  - 기존 모델에서 출력부분을 조정하여
    - 신경망을 새로 구축해서 연결
    - 출력부분을 입력으로 활용해서 새로운망으로 연결
    - 정교하게 튜닝해라(미션)
  - ex) VGG16 모델을 사용한다. 이 모델은 1000개의 카테고리르 분류할수 있다. 이미 학습되어 있다
    - 이 모델을 가져와서, 개와 고양이를 잘 분류하는 부분만 가져와 새롭게 만들수 있다

# 파인 튜닝 모형(전이학습의 네트워크 모델)
"""

from IPython.display import Image
Image('/content/drive/MyDrive/k-디지털-품질재단/딥러닝/new_res/전이학습-1.png')

# 기존에 잘 학습된 모델을 가져와서,
# 마지막 층(Dense, Ouptut)을 제거
# 혹은, 기존 신경망에 W,b를 완전히 초기화하여 새로 훈련시킨다

Image('/content/drive/MyDrive/k-디지털-품질재단/딥러닝/new_res/전이학습-2.png')

# 마지막 출력층 전에 새로운 신경망을 개입
# 후반작업을 좀더 커스터마이즈한 케이스

Image('/content/drive/MyDrive/k-디지털-품질재단/딥러닝/new_res/전이학습-3.png')
# 후반부에 새로운 신경망을 개입
# 후반부에 추가된 신경망은 훈련이 않되어 있다
# 기존 네트워크는 훈련 X, 새로 추가한 부분만 훈련시킨다

Image('/content/drive/MyDrive/k-디지털-품질재단/딥러닝/new_res/전이학습-4.png')

# 기존신경망 + 새로운 신경망 연결
# 기존신경망의 결과를 새로운 신경망의 입력데이터로 사용

"""# 사전학습된 모델은 어디에?

- 딥러닝 엔진에서 제공
  - tensorflow.keras.application.xxxx
  - 네트워크 모델의 layer(층) 가감을 수행있다.
  - 각 층들이 잘 보임
- Tensorflow Hub
  - https://www.tensorflow.org/hub
  - 사전 학습된 모델을 제공
  - 텐서플로우, 파이토치등 다 지원
  - 내부 신경망이 다 보이지 않는다

## 케라스에서 제공하는 사전학습된 모델
"""

from tensorflow.keras.applications import MobileNetV2

# xxxx.h5 가 다운로드 되었다
mobilev2 = MobileNetV2()

# 입력 ( None, 224, 224, 3 ) : 입력 이미지는 (224,224) 칼라이미지(3채널) 사용
mobilev2.summary()
# 출력 (None, 1000) : 1000개의 이미지를 분류하는구나

"""## 텐서플로우 허브

- https://tfhub.dev/
"""

url = 'https://tfhub.dev/google/tf2-preview/mobilenet_v2/classification/4'

import tensorflow as tf
import tensorflow_hub as hub

model = tf.keras.Sequential(
  [ hub.KerasLayer(url, output_shape=[1000+1]) ]
)

model.build( [None, 224, 224, 3] )
model.summary()
# 기존모델을 조작(X), 이 모델을 새로운 모델의 입력으로 활용하여 
# 학습하는 파인튜닝 스타일의 전이학습에 적합

Image('')