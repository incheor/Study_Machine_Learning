# -*- coding: utf-8 -*-
"""20.전이학습_가중치그대로사용.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19OsaItzbEPRh8EplTjIiOUyQ_JGgcy27

# 정답 레이블 생성
"""

import os

fDir = '/content/drive/MyDrive/k-디지털-품질재단/딥러닝/dog_cat_data/Images'

labels = list()
for dir in os.listdir(fDir):
  dog_type = '-'.join(dir.split('-')[1:])
  for f in os.listdir( os.path.join( fDir, dir) ):
    name = f.split('.')[0]
    data = f'{dir},{name},{dog_type}\n'
    labels.append( data )

with open('new_labels.csv', 'w') as f:
  f.write( 'dir,name,spec\n'+ ''.join(labels) )

"""# 훈련 데이터 로드"""

import cv2
import pandas as pd

labels    = pd.read_csv('/content/new_labels.csv')

base_path = '/content/drive/MyDrive/k-디지털-품질재단/딥러닝/dog_cat_data/Images'
train_X   = list()
for i in range(100):
  dir   = labels.loc[i, 'dir']
  name  = labels.loc[i, 'name']
  fName = f'{base_path}/{dir}/{name}.jpg'
  img   = cv2.imread( fName )
  img   = cv2.resize( img, dsize=(224,224) )
  img   = img / 255.0
  train_X.append( img )

import numpy as np
train_X = np.array( train_X )
train_X.shape

unique_label = labels.spec.unique().tolist()
train_y      = [ unique_label.index(name) for name in labels.spec ]
train_y      = np.array( train_y )
train_y.shape

train_y[:2]

"""# 전이학습

- 사전 학습된 모델 로드
- **파인 튜닝 전략**
  - 기존의 모델이 가진 가중치를 활용
    - 마지막 30개의 레이어의 가중치는 버린다.
    - 새로운 데이터를 보내서 학습을 진행하는데 마지막 30개만 훈련하도록 진행
      - 상위 126개는 훈련 X
      - 하위 30개 훈련 O
    - 마지막 출력은 120개로 수렴하도록 수정

## 사전 학습된 모델 가져오기
"""

from tensorflow.keras.applications import MobileNetV2

mobilev2 = MobileNetV2()
# (?, 224,224,3) => (?, 1000), 156 layers

import tensorflow as tf
# 출력층 교체 (?, 1000) => (?, 120)
x        = mobilev2.layers[-2].output
preModel = tf.keras.layers.Dense( 120, activation='softmax' )( x )

# 신경망 교체 완료
model = tf.keras.Model( inputs=mobilev2.input, outputs=preModel )

# 학습 여부를 층별로 조정 -> 하위 30개만 학습 진행하겟다
for layer in mobilev2.layers[:-30]:
  layer.trainable = False # 상위 126개는 가중치를 유지한다. 학습영향없다
for layer in mobilev2.layers[-30:]:
  layer.trainable = True  # 하위 30개는 가중치를 새로 학습해서 조정한다

# 컴파일
model.compile( optimizer='sgd', loss='sparse_categorical_crossentropy', 
               metrics=['accuracy'])
'''
Total params: 2,411,704
Trainable params: 1,526,200     <- 학습 대상 파라미터
Non-trainable params: 885,504
'''
model.summary()

train_X.shape, train_y[:100].shape

hist = model.fit( train_X, train_y, epochs=10, 
                 validation_split=0.25, batch_size=32 )
# 데이터 셔플을 통해서 학습 진행 요망

hist = model.fit( train_X, train_y[:100], epochs=10, 
                 validation_split=0.25, batch_size=32 )



